[build-system]
requires = ["pdm-backend"]
build-backend = "pdm.backend"

[project]
name = "mkdocstrings-graphql"
version = "0.1.0-rc1"
description = "A GraphQL handler for mkdocstrings."
authors = [{name = "mmb L"}]
license = "MIT"
license-files = ["LICENSE"]
readme = "README.md"
keywords = []
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Topic :: Documentation",
    "Topic :: Software Development",
    "Topic :: Utilities",
    "Typing :: Typed",
]
requires-python = ">=3.9"
dependencies = [
    "backports-strenum>=1.3.1 ; python_full_version < '3.11'",
    "graphql-core~=3.2.0",
    "griffe>=1.6.0",
    "mkdocstrings>=0.18",
    "typing-extensions~=4.13.0",
]

[project.urls]
Repository = "https://github.com/mammothb/mkdocstrings-graphql"
Issues = "https://github.com/mammothb/mkdocstrings-graphql/issues"
Funding = "https://github.com/sponsors/mammothb"

[tool.basedpyright]
include = ["src", "tests"]
exclude = ["tests/fixtures"]
typeCheckingMode = "recommended"

reportAny = "none"
reportExplicitAny = "none"
reportUnusedCallResult = "none"
reportUnknownArgumentType = "none"
reportUnknownMemberType = "none"
reportUnknownVariableType = "none"
reportUntypedClassDecorator = "none"

executionEnvironments = [
    { root = "src" },
    { root = "tests", reportAttributeAccessIssue = "none", reportPrivateUsage = "none"  }
]

[tool.coverage.report]
omit = ["src/**/__init__.py"]

[tool.coverage.run]
branch = true
parallel = true
source = ["src"]

[tool.coverage.xml]
output = "coverage.xml"

[tool.pdm.build]
package-dir = "src"
includes = ["src/mkdocstrings_handlers"]
editable-backend = "editables"

excludes = ["**/.pytest_cache"]
source-includes = [
    "config",
    "tests",
    "*.md",
    "LICENSE",
]

[tool.pytest.ini_options]
addopts = ["--cov"]
python_files = ["test_*.py"]
testpaths = ["tests"]

filterwarnings = ["error", "ignore:.*rsyncdir:DeprecationWarning:xdist"]

[tool.ruff]
line-length = 120
target-version = "py39"

[tool.ruff.format]
exclude = [
    "tests/fixtures/*.py",
]
docstring-code-format = true
docstring-code-line-length = 80

[tool.ruff.lint]
exclude = [
    "tests/fixtures/*.py",
]
select = ["ALL"]
ignore = [
    "A001",  # Variable is shadowing a Python builtin
    "ANN204",  # Missing return type annotation for special method __str__
    "ANN401",  # Dynamically typed expressions (typing.Any) are disallowed
    "ARG005",  # Unused lambda argument
    "C901",  # Too complex
    "COM812",  # Trailing comma missing
    "D105",  # Missing docstring in magic method
    "D205",  # Missing blank line after summary
    "D417",  # Missing argument description in the docstring
    "E501",  # Line too long
    "ERA001",  # Commented out code
    "G004",  # Logging statement uses f-string
    "PLR0911",  # Too many return statements
    "PLR0912",  # Too many branches
    "PLR0913",  # Too many arguments to function call
    "PLR0915",  # Too many statements
    "PTH",
    "SLF001",  # Private member accessed
    "TRY003",  # Avoid specifying long messages outside the exception class
]

[tool.ruff.lint.flake8-quotes]
docstring-quotes = "double"

[tool.ruff.lint.flake8-tidy-imports]
ban-relative-imports = "all"

[tool.ruff.lint.isort]
known-first-party = ["mkdocstrings_handlers.graphql"]

[tool.ruff.lint.per-file-ignores]
"!src/*/*.py" = [
    "D100",  # Missing docstring in public module
]
"!src/**.py" = [
    "D101",  # Missing docstring in public class
    "D103",  # Missing docstring in public function
]
"tests/**.py" = [
    "EM101",  # Raw string in exception
    "S101",  # Use of assert detected
]

[tool.ruff.lint.pydocstyle]
convention = "google"

[dependency-groups]
maintain = [
    "build>=1.2",
    "twine>=5.1",
]
ci = [
    "basedpyright>=1.28",
    "pytest-cov>=5.0",
    "pytest-randomly>=3.15",
    "pytest-xdist>=3.6",
    "pytest>=8.2",
    "ruff>=0.11",
    "types-markdown>=3.6",
    "types-pyyaml>=6.0",
]

[tool.uv]
default-groups = ["maintain", "ci"]
